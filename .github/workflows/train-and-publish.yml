name: Train & Publish Model

# Schedule: every day at 2 AM UTC, and also manual trigger
on:
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  train-and-upload:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install backend & ML dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r ml/requirements.txt
        pip install -r backend/requirements.txt
        pip install supabase

    - name: Generate synthetic data
      run: python ml/synthetic_data.py --hours 2160


    - name: Train Transformer model
      run: python ml/advanced_transformer.py --epochs 3

    - name: Upload model to Supabase Storage
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
        MODEL_BUCKET: ${{ secrets.MODEL_BUCKET }}
      run: |
        python - <<'PY'
        import os, requests

        # Read environment variables
        supabase_url = os.environ['SUPABASE_URL'].rstrip('/')
        supabase_key = os.environ['SUPABASE_KEY']
        bucket = os.environ['MODEL_BUCKET']

        model_file = 'models/transformer_forecast.pt'
        if not os.path.exists(model_file):
            raise FileNotFoundError(f"{model_file} not found.")

        # Supabase Storage URL
        upload_url = f"{supabase_url}/storage/v1/object/{bucket}/transformer_forecast.pt"

        headers = {
            "apikey": supabase_key,
            "Authorization": f"Bearer {supabase_key}"
        }

        with open(model_file, "rb") as f:
            r = requests.put(upload_url, headers=headers, data=f)

        if r.status_code in [200, 201]:
            print("✅ Model uploaded successfully.")
        else:
            raise Exception(f"❌ Upload failed: {r.status_code}, {r.text}")
        PY

